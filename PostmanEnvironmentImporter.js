// Generated by CoffeeScript 1.8.0
(function() {
  var PostmanEnvironmentImporter;

  PostmanEnvironmentImporter = function() {
    this.importString = function(context, string) {
      var error, pawEnvironment, pawEnvironmentDomain, pawEnvironmentDomainName, postmanEnvironments, postmanValue, variablesDict, _i, _len, _ref;
      try {
        postmanEnvironments = JSON.parse(string);
      } catch (_error) {
        error = _error;
        throw new Error("Invalid Postman file (not a valid JSON)");
      }
      if (!postmanEnvironments || !postmanEnvironments["values"] || !postmanEnvironments["name"]) {
        throw new Error("Invalid Postman file (missing data)");
      }
      pawEnvironmentDomainName = "Imported (Postman)";
      pawEnvironmentDomain = context.getEnvironmentDomainByName(pawEnvironmentDomainName);
      if (!pawEnvironmentDomain) {
        pawEnvironmentDomain = context.createEnvironmentDomain(pawEnvironmentDomainName);
      }
      pawEnvironment = pawEnvironmentDomain.createEnvironment(postmanEnvironments["name"]);
      variablesDict = {};
      _ref = postmanEnvironments["values"];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        postmanValue = _ref[_i];
        variablesDict[postmanValue["key"]] = postmanValue["value"];
      }
      pawEnvironment.setVariablesValues(variablesDict);
      return true;
    };
  };

  PostmanEnvironmentImporter.identifier = "com.luckymarmot.PawExtensions.PostmanEnvironmentImporter";

  PostmanEnvironmentImporter.title = "Postman Environment Importer";

  registerImporter(PostmanEnvironmentImporter);

}).call(this);
